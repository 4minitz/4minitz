name: 4MinitzCI
on: [push, pull_request]

jobs:
  UnitTestsAndI18n:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: '8.11.4'
    - run: sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
    - run: sudo apt-get install gcc-4.8 -y --option Acquire::Retries=100 --option Acquire::http::Timeout="300"
    - run: sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.8 50
    - run: curl https://install.meteor.com | /bin/sh
    - run: pwd
    - run: meteor --version
    - run: npm install

    - run: npm run test:unit
    - run: npm run test:i18n


  E2E:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true   # When set to true, GitHub cancels all in-progress jobs if any matrix job fails. Default: true
      matrix:   # max. 20 concurrent jobs https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#usage-limits
        e2etest:
          - tests/end2end/MeetingSeries-test.js
          - tests/end2end/MeetingSeriesEdit-test.js
          - tests/end2end/MeetingSeriesItemList-test.js
    env:
        WOK: ${{ matrix.e2etest }}
        WOKB: ${{ matrix.e2etest }}
        WOKA: $(basename -- ${{strategy.job-index}})
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v1
        with:
          node-version: '8.11.4'
      - run: sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
      - run: sudo apt-get install gcc-4.8 -y --option Acquire::Retries=100 --option Acquire::http::Timeout="300"
      - run: sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.8 50
      - run: curl https://install.meteor.com | /bin/sh
      - run: pwd
      - run: meteor --version
      - run: google-chrome --version
      - run: npm install

      - uses: actions/setup-node@v1
        with:
          node-version: '12.16.2'         # chromedriver needs node v12 to install!
      - run: npm i chromedriver@^84.0.0
      - run: ./node_modules/chromedriver/bin/chromedriver --version

      - uses: actions/setup-node@v1
        with:
          node-version: '8.11.4'           # switch back to meteors node v8
      - run: echo github.job ${{ github.job }}
      - run: WOK2=${{strategy.job-index}}
      - run: export WOK3=${{strategy.job-index}}
      - run: export WOK4="$(basename -- ${{strategy.job-index}})"
      - run: export WOK5="$(basename $WOKB)"
      - run: echo WOK $WOK
      - run: echo WOK2 $WOK2 ${WOK2}
      - run: echo WOK3 $WOK3 ${WOK3}
      - run: echo WOK4 $WOK4  ${WOK4}
      - run: echo WOKA $WOKA  ${WOKA}
      - run: echo WOK5 $WOK5  ${WOK5}
      - run: echo 1 ${{ env.WOK }}
      - run: echo 2 ${{ env.WOK5 }}
      - run: echo 3 ${{ jobs.E2E.env.WOK }}
      - run: echo 4 ${{ jobs.E2E.env.WOK5 }}
      - run: ./tests/run_e2e.sh ${{ matrix.e2etest }}

      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "$MATRIX_CONTEXT"


      - name: Upload E2E screenshot artifacts
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: ${{strategy.job-index}}_E2E_Screenshots
          path: tests/snapshots
      - name: Upload E2E log artifacts
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: ${{strategy.job-index}}_E2E_Logs
          path: tests/end2end/logs
      - name: Upload E2E MongoDB artifacts
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: ${{ matrix.e2etest }}_E2E_Mongodump
          path: tests/mongodump
